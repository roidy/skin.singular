<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <include name="ButtonZoom">
        <animation type="Focus" reversible="false">
            <effect type="zoom" end="106" time="50" tween="sine" center="auto" />
            <effect type="zoom" end="94.35" time="150" tween="sine" delay="100" center="auto" />
        </animation>
    </include>

    <include name="SettingsButtonZoom">
        <animation type="Focus" reversible="false">
            <effect type="zoom" end="101,104" time="50" tween="sine" center="auto" />
            <effect type="zoom" end="99,96" time="150" tween="sine" delay="100" center="auto" />
        </animation>
    </include>

    <include name="CenterContext">
        <animation effect="slide" start="0,0" end="0,870" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,1)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,790" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,710" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,630" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,550" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,5)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,470" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,6)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,390" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,7)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,310" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,8)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,230" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,9)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,150" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,10)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,70" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,11)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,70" time="0" condition="Integer.IsGreater(Container($PARAM[id]).NumItems,11)">Conditional</animation>
    </include>

    <include name="CenterDialogSelect">
        <animation effect="slide" start="0,0" end="0,998" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,1)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,918" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,2)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,838" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,3)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,758" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,4)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,678" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,5)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,598" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,6)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,518" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,7)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,438" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,8)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,358" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,9)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,278" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,10)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,198" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,11)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,118" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,12)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,38" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,13)">Conditional</animation>

        <animation effect="slide" start="0,0" end="0,0" time="0" condition="Integer.IsGreater(Container($PARAM[id]).NumAllItems,13)">Conditional</animation>
    </include>

    <include name="CenterDialogSelectImage">
        <animation effect="slide" start="0,0" end="0,980" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,1)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,880" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,2)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,780" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,3)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,680" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,4)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,580" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,5)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,480" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,6)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,380" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,7)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,280" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,8)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,180" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,9)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,80" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumAllItems,10)">Conditional</animation>

        <animation effect="slide" start="0,0" end="0,0" time="0" condition="Integer.IsGreater(Container($PARAM[id]).NumAllItems,10)">Conditional</animation>
    </include>

    <include name="MainMenuTopAnimation">
        <animation effect="slide" start="0,0" end="0,984" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,1)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,888" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,792" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,696" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,600" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,5)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,504" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,6)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,408" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,7)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,312" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,8)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,216" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,9)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,120" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,10)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,24" time="0" condition="Integer.IsEqual(Container($PARAM[id]).NumItems,11)">Conditional</animation>
    </include>

    <include name="SongListPlayHead">
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsEqual(Player.Progress,1) | Integer.IsGreater(Player.Progress,1)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,1)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,2)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,3)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,4)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,5)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,6)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,7)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,8)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,9)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,10)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,11)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,12)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,13)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,14)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,15)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,16)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,17)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,18)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,19)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,20)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,21)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,22)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,23)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,24)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,25)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,26)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,27)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,28)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,29)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,30)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,31)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,32)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,33)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,34)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,35)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,36)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,37)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,38)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,39)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,40)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,41)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,42)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,43)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,44)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,45)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,46)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,47)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,48)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,49)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,50)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,51)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,52)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,53)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,54)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,55)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,56)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,57)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,58)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,59)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,60)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,61)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,62)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,63)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,64)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,65)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,66)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,67)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,68)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,69)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,70)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,71)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,72)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,73)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,74)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,75)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,76)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,77)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,78)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,79)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,80)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,81)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,82)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,83)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,84)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,85)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,86)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,87)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,88)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,89)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,90)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,91)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,92)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,93)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,94)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,95)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,96)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,97)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,98)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,99)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="13" time="10" condition="Integer.IsGreater(Player.Progress,100)" reversible="false">Conditonal</animation>
    </include>

    <include name="PlayerProgressAnimation">
        <animation effect="slide" start="0" end="6" time="100" condition="Integer.IsGreater(Player.Progress,2)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,3)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,4)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,5)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,6)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,7)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,8)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,9)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,10)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,11)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,12)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,13)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,14)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,15)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,16)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,17)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,18)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,19)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,20)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,21)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,22)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,23)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,24)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,25)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,26)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,27)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,28)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,29)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,30)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,31)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,32)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,33)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,34)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,35)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,36)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,37)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,38)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,39)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,40)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,41)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,42)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,43)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,44)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,45)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,46)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,47)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,48)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,49)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,50)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,51)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,52)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,53)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,54)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,55)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,56)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,57)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,58)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,59)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,60)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,61)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,62)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,63)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,64)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,65)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,66)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,67)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,68)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,69)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,70)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,71)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,72)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,73)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,74)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,75)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,76)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,77)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,78)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,79)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,80)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,81)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,82)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,83)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,84)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,85)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,86)" reversible="false">Conditonal</animation>
        <animation effect="slide" start="0" end="16.5" time="100" condition="Integer.IsGreater(Player.Progress,87)" reversible="false">Conditonal</animation>
    </include>

</includes>